name: CI/CD Pipeline for ECR and EC2

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    name: Build, Push to ECR, Deploy on EC2
    runs-on: ubuntu-22.04

    env:
      ECR_REGISTRY: 418272768555.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPOSITORY: modie/modie-be
      COMMIT_HASH: "${{ github.sha }}"  # SHA 값을 직접 사용

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Short COMMIT_HASH
        run: echo "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Debug COMMIT_HASH
        run: echo "Shortened COMMIT_HASH is $COMMIT_HASH"

      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.ECR_USER_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.ECR_USER_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_HASH .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$COMMIT_HASH

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          script: |
            set -e  # 🚀 오류 발생 시 즉시 종료
            # ✅ EC2 내부에서 다시 COMMIT_HASH 설정
            COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7)
            if [[ -z "$COMMIT_HASH" ]]; then
              echo "❌ COMMIT_HASH가 설정되지 않았습니다. 최신 태그를 가져옵니다."
              
              # AWS ECR에서 최신 태그 가져오기
              COMMIT_HASH=$(aws ecr describe-images --repository-name modie/modie-be \
                --region ap-northeast-2 --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
      
              # 값이 없으면 오류 처리
              if [[ -z "$COMMIT_HASH" || "$COMMIT_HASH" == "None" ]]; then
                echo "❌ 최신 태그를 가져오지 못했습니다. 배포 중단!"
                exit 1
              fi
            fi

      echo "🚀 사용할 Docker 태그: $COMMIT_HASH"   
            # aws 로그인
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 418272768555.dkr.ecr.ap-northeast-2.amazonaws.com/modie/modie-be
            
            # Pull 최신 이미지
            docker pull 418272768555.dkr.ecr.ap-northeast-2.amazonaws.com/modie/modie-be:$COMMIT_HASH
            
            # Nginx 설정 파일 경로
            NGINX_CONFIG=/etc/nginx/conf.d/backend.conf
            
            # 기존 컨테이너 확인 및 포트 설정
            PORT=8080
            OTHER_PORT=8081
            if docker ps | grep -q "0.0.0.0:8081"; then
              PORT=8080
              OTHER_PORT=8081
              BG_MODE=blue
            else
              PORT=8081
              OTHER_PORT=8080
              BG_MODE=green
            fi
            
            docker run -d -p $PORT:8080 --name modie-be-$PORT \
              -e RDS_ENDPOINT=${{ secrets.DB_HOST }} \
              -e RDS_PORT=${{ secrets.DB_PORT }} \
              -e DB_USERNAME=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e SPRING_PROFILES_ACTIVE=prod \
              --restart always \
              418272768555.dkr.ecr.ap-northeast-2.amazonaws.com/modie/modie-be:$COMMIT_HASH || {
                echo "❌ Docker 컨테이너 실행 실패!"
                exit 1
              }

            
            # nginx 설정 변경
            sudo sed -i "s|set \$active_backend backend-.*;|set \$active_backend backend-$BG_MODE;|g" $NGINX_CONFIG

            # 활성 백엔드 변경 (active_backend.conf 업데이트)
            echo "set \$active_backend backend-$BG_MODE;" | sudo tee /etc/nginx/conf.d/active_backend.conf
          
            # 🔥 Nginx 설정 테스트 후 적용 (실패 시 롤백)
            if sudo nginx -t; then
              sudo systemctl reload nginx
              echo "✅ Nginx 설정이 성공적으로 적용되었습니다!"
            else
              echo "❌ Nginx 설정 오류 발생! 롤백 수행"
              docker stop modie-be-$PORT
              docker rm modie-be-$PORT
              exit 1
            fi
      
            # 이전 컨테이너 종료 및 삭제
            docker stop modie-be-$OTHER_PORT || true
            docker rm modie-be-$OTHER_PORT || true
      
            echo "🚀 배포 완료!"
